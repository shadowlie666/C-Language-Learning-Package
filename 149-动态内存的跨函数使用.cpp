# include <stdio.h>     //该程序就实现了fas函数里面创建的内存空间在执行完fas函数之后仍可以在main函数里面继续使用 
# include <malloc.h>

int fas(int **k)
{										//malloc后面的括号尽量不要写成具体数字，因为不同程序规定不同，不是每个程序的int都是4字节，尽量按程序来 
	*k = (int*)malloc(sizeof(int));    //使用sizeof来读取int类型的大小，避免了每个程序都申请4字节，但是某些程序装不下int类型的值的情况 
	**k = 5;  //注意这里，由于p是一级指针，读取p所执行的内存空间要用*p，所以这里是要改变*p的值，而*p是int类型的，所以这里也要用**k来保证类型一致 
}

int main(void)
{
	int *p;   //该程序的目的就是在执行完fas函数后，指针p仍可以读取其执行的内存空间 
	fas(&p);  //p时int*类型，&p就是int**类型，所以定义k的时候也要定义成int**类型，详见第4行 
	printf("%d\n", *p);
		
	return 0;
}

//假如这里第6行是写了个int i=5之类的静态内存，那么在第13行执行完后i的空间就被释放掉了，即使p指向i，由于i的空间没了，p也无法读取i地址里面的内容
//所以要使用动态内存确保p可以读取到内容 
