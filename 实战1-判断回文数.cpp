# include <stdio.h>  //回文数就是正着倒着都是相等的数，比如12321，正着倒着都是12321，那么12321就是一个回文数 

int main(void)
{
	int i;  //这里的这个i就是你输入的值 
	int m;  //这里的m是一个中间值，目的是将i的每一个数字提取出来，然后将其赋值给sum，使得sum为i的倒着写的数 
	int sum = 0;  //这里的sum是将你输入的i倒过来的值
	
	printf("请输入你要判断的数字："); 
	scanf("i = %d", &i);
	
	m = i;
	while(m)  //计算机判断0为假，其余为真，也就是说，只要m的值不为0，就可以执行while语句 
	{
		sum = sum * 10 + m%10; //sum*10是为了把之前提出的个位数放到十位数上，m%10取余是为了提出个位数 
		m/=10;  //删掉个位数 
	} 
	
	if(i == sum)
		printf("这个数字是回文数");
	else
		printf("这个数字不是回文数"); 
	
	return 0;
}

//判断回文数，关键就是把输入值的每一个数字提取出来，然后重新排列赋给一个新的变量，再将新变量和输入值进行比较
//比如输入值为1234，这里中间商m在第12行得到i的值后，只要m不为0，便可以执行while语句，sum的初始值为0，1234除10取余会剩下4
//于是4便赋给了sum，然后m除以10，由于都是整数，不会保留小数位，那么1234/10=123，这样的话个位就由原来的4变成了3
//之后再执行第15行的语句，先把之前sum已经被赋的值3放到十位，也就是将sum乘10，然后执行m%10，这样123除10取余会剩下3
//刚好之前的4已经乘10放到了十位，这样的话直接加上3就可以把3放到个位上去 （此时15行执行的是sum=4*10+123%10=4*10+3=43） 
//之后也是按这个顺序，先把43分别推到千位和百位，再把21分别推到十位和个位，这样就实现了数字的调换

//总结：利用取余把个位数给提出来，然后利用乘10将提出来的个位数放到比较值的十位上去，然后利用整数除以整数的特性将输入值缩短，
//将原来输入值的十位挪到个位上去，继续提出输入值的个位数，利用加法将这个提出来的数放到比较值的个位上去 
