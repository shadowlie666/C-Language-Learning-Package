#include <stdio.h>

int main(void)
{
	int i,k;
	char p;
	printf("请输入两次你想要的数字，每次输完数字后按下回车\n"); 
	scanf("%d", &i);
	printf("i = %d\n", i);
	while( (p = getchar())  != '\n' ) //这里的while就是常见的循环语句，就是当p给赋值的时候，继续运行continue下面的程序 
	continue;
	
	scanf("%d", &k);
	printf("k = %d\n", k);
	
	return 0;
}

//这里用char定义了一个p，就是说当你输入123m的时候，由于你的i是用int定义的，所以只会输出为123，但是多余的m并不会自动删除，他会被赋到能被赋予字符的变量上
//也就是用char定义的p，这样程序便可以继续运行， 用户可以继续输入数字给k赋值 
//否则你输入123m，i会获得123没有错，但是剩下的m计算机会认为你一定输入了东西要赋给k了，也就是这个m，只是这个m不合法不能给赋到k而已 

//比如你输入12asd，i获得12，然后p拿到a（char只有一个字节大小），然后continue跳出循环，但是还有剩下的sd，于是要把剩下的sd清除，
//这时候也只有p能继续赋予字符，于是p再被赋给s，于是while循现换行符（回车）环又成立了，继续执行下去，同样的跳出循环后d也会被赋予给p，
//注意你敲完12asd时是敲了一下回车的 ，第10行的!= '\n'就是当出的时候while语句删除，也就是当p赋完d之后的下一次循环
//就会出现回车了，这时候while语句就相当于直接删除了，于是asd这些没有用的字符就被清除干净了，用户就可以继续给k赋值了 
//continue不会终止循环，所以这里执行玩continue之后会重新执行一次while语句 
