# include <stdio.h>

void max(int i, int k)               //函数的名字及功能都是可以自己定义的，不是程序里面给你写好的，固定的 
{                                    //就算你这里把max改成asd，只要你下面在main函数里面调用的时候也说调用asd函数就行 
	if(i>k)                          //同样的，你也可以把max函数的内容给进行更改 
		printf("%d\n", i);
	else							//这里可以将第六行改成return i，第八行改成return k，好处就是只找了i和k的最大值，没有对他们进行处理 
		printf("%d\n", k);          //而左边则直接把他们输出了，如果我后面还要将max函数的输出结果进行处理的话，左边函数就没办法做到 
}									//因为左边函数直接把执行结果给输出了，而改成return的话，则将执行结果返还给main函数，还可以进行处理 
									//注意，如果用return的话，后面再输出结果就要变成printf（“%d”，max（a，b））这个样子 
int main(void)
{
	int a, b, c, d;              //假如你上面的max函数，在第八第九行之间加了return 0，就代表会将整个程序返回 
	a = 1;                       //即当第19行运行完max函数的时候，会将整个程序返回，那么程序就会默认重新执行一次 
	b = 6;                        //也就是会从第13行重新执行一次 
	c = 69;                     //如果你不加return 0，就不会重新执行一次，执行完第19行后会继续执行第20行， 
	d = 52;                      //但如果你加了return 0，执行完第19行后就会重新执行程序，也就是会执行第13行 
	
	max(a,b);
	max(c,d);
	
	return 0;
}
//函数的运用是先在main函数上面表示出你要调用的函数以及他的功能，比如这里要调用max函数就写void max表示调用，然后4-8行写了这个函数的运用过程
//注意他是已经有输出的了，下面调用完函数后不用另外写一个printf来输出，在main函数里面要求最大值就直接调用max这个函数就行
//调用max函数就直接写max，像第19行那样就行 
//所有程序都是从main函数开始执行的，下面第19行调用完max函数就会把这个函数运用过程产生的内存（i，k的内存）给释放，下次运用时重新分配内存
//因此，每次调用函数的时候，函数运行过程所用的内存位置都是不一样的 
