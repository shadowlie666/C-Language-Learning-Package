# include <stdio.h>   //该程序的目的就是将一开始动态内存内的值20，在运行完fas函数后变成200 
# include <malloc.h>

int fas(int *k)  //结合15行，由于kp都是指针变量，所以这里把p给k就相当于复制一个p在k那里，那么kp就是两个完全相同的指针变量，*k也表示那一块动态内存 
{					//所以这里改变*k的值就是改变那一块动态内存的值 
	*k = 200;
	//free(k);    //因为是动态内存，所以可以随时释放，同时也可以保证运行完fas函数后那一块内存不会给释放掉，这样16行才能输出那一块内存的值 
}		//但是注意这里不能写这串代码，因为这串代码的意思是释放掉k指向的变量的内存，而k指向的变量就是那一段动态内存，如果释放了就无法改变值了 
		//也要注意要是以后要释放内存的时候，不要写成free（*k），因为括号内必须是指针变量，不是一般变量，释放的是指针指向的值，不是直接释放内存 
int main(void)    //也不要写成free（p），因为p是main函数里面定义的变量，不属于fas函数，而且p也是一个局部变量，不能在fas函数里面使用 
{
	int *p = (int *)malloc(sizeof(int));  //这里的sizeof(int)就表示int类型所占的字节大小，所以sizeof(int)=4，也就是malloc(sizeof(int))=malloc（4） 
	*p = 20;   //这里的p指向的是malloc定义的那一块动态内存，所以这里就是给那一块动态内存赋值 
	printf("%d\n", *p);
	fas(p); 
	printf("%d\n", *p);
	
	return 0;
}
