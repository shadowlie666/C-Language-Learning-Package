# include <stdio.h>

int main(void)
{
	int k = 6;
	int m; 
	
	m = (3>2) && (k = 9);
	printf("k=%d,m=%d\n", k, m); 
	
	return 0;
}

//第八行的k=9是会被执行的，因为光一个3>2无法判断m的值，这时k=9就会覆盖前面的k=6，所以输出是k会等于9
//由于3>2是真命题，k的值也不为0，k=9也是真命题，所以在且命题中m就是一个真命题，则m的值应该为1
//若3>2变成1>2，这时候m=0，k=6，因为计算机是从左往右执行的，在且命题中1>2的时候m就一定是个假命题了，那么m就一定等于0
//而且这时候由于1>2就已经足够判断m的输出值了，系统也不会继续执行后面的k=9的命令，所以k的值就还是一开始的6 
//同样的，若这里不是且命题而是或命题||，那么当||的左边为真命题时，计算机也不需要执行右边的命令就可以直接输出了 
