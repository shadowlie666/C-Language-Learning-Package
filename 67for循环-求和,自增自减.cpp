# include <stdio.h>

int main(void)
{
	int i;
	int sum=0; //这里sum的值不一定为0，但是因为程序的目的是对i进行求和，如果sum不为0求和时就会把sum的初始值给算上，最后的和就变成i和sum初始值的和 
	
	for(i=1; i<=5; ++i) //这里的i=1和i<=5就是将i从1到5求和，注意括号里面是分号不是逗号 
		sum=sum+i;      //如果要求的是奇数的和，可以将++i变成i+=2，也就是i=i+2，再把i的初始值设为1，这样就能保证每次加到sum里面的值都是奇数 
	printf("sum = %d",sum, i);
	
	return 0;
}
//for循环解释：将i=1命名为编号1，i<=5为编号2，++i为编号3，p=p+i为编号4
//执行顺序为先执行编号1，然后编号2，然后编号4，然后编号3，再回来执行编号2，如果编号二仍成立，继续执行编号4，然后执行编号3，一直到循环结束
//即1243243243....     注意++i才是循环结束的标志
 
//从这个程序来看就是，先给i赋值为1，然后判断i<=5成立，则继续执行编号4，则sum的值变成了sum+i=0+1=1，然后执行编号3，i变加一变为了2，然后执行编号2
//发现i=2<=5成立，则继续执行编号4，此时sum的值是1，i的值也变成了2，那么执行编号4时sum=1+2=3，如此循环下去 

//之所以这样子写去求和，你会发现每次循环都是先把i的值赋值到sum中，然后i再加1再加到sum中，实际上就是将每次i+1的值都加到sum中，从而达到求和的效果
//例如上式就是先把i的初始值1放到sum中，然后利用编号3让i的值产生变化，再利用编号2使变化后的i值继续参与编号4的命令，使变化后的i值再加到sum中
//使i的初始值和i的变化值得以相加，同时编号2也起到了确定终点的作用，也就是i要继续加到什么时候停止，上式就是加完i=5后就不再继续执行编号4的指令，
//之后sum的值就不在发生变化，for循环结束，然后就是输出这个sum的值了

//解释一下。++i和i++本质上是有区别的，只是在for循环里面没有区别而已,当运用到赋值上面去的时候就有区别了
//++i，先加后赋值，如x=++i，i=1，那么i就先加加1等于2，然后再赋给x，最终x=2 
//i++，先赋值后加，x=i++，i=1，那么i先赋值给x，x=1，然后i再加一为2，如果还要将i继续赋值给其他变量，那个其他变量才会被赋值为2
